import matplotlib.pyplot as plt
import pandas as pd
import os

dataset_list = ['MUTAG']
num_datasets = len(dataset_list)
directory = './results'
models_list = ['GIUNetCent', 'GIUNetSpect']

# Loop over datasets
for i, dataset in enumerate(dataset_list):
    plt.figure(figsize=(16, 12))  # Create a new figure for each dataset
    
    for j, model in enumerate(models_list):
        model_results_dir = os.path.join('results', model)
        log_file_path = os.path.join(model_results_dir, f'logs_for_{dataset}.csv')
        log_df = pd.read_csv(log_file_path)

        # Extract data from the DataFrame
        epochs = log_df['Epoch']
        train_accuracies = log_df['Train Accuracy']
        test_accuracies = log_df['Test Accuracy']
        train_losses = log_df['Train Loss']
        test_losses = log_df['Test Loss']

        # Calculate subplot position
        subplot_position = (len(models_list) * i) + j + 1

        # Plotting accuracy and loss on the same subplot
        plt.subplot(len(models_list), 1, subplot_position)  # Number of rows equal to the number of models
        plt.plot(epochs, train_accuracies, label=f'Train Accuracy - {model}')
        plt.plot(epochs, test_accuracies, label=f'Test Accuracy - {model}')
        plt.plot(epochs, train_losses, linestyle='dashed', label=f'Train Loss - {model}')
        plt.plot(epochs, test_losses, linestyle='dashed', label=f'Test Loss - {model}')

        plt.xlabel('Epoch')
        plt.ylabel('Accuracy / Loss')
        plt.title(f'{model} - Accuracy and Loss for {dataset}')
        plt.legend()

    plt.tight_layout()
    visualization_file_path = os.path.join('results', f'comparison_{dataset}_logs_visualization')  # Adjust the filename
    plt.savefig(visualization_file_path)
    plt.show()  # Display and save the figure for each dataset
